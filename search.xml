<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Ming&#39;s random numbers</title>
      <link href="2021/02/22/Ming&#39;s%20random%20numbers/"/>
      <url>2021/02/22/Ming&#39;s%20random%20numbers/</url>
      
        <content type="html"><![CDATA[<h2 id="明明的随机数"><a href="#明明的随机数" class="headerlink" title="明明的随机数"></a>明明的随机数</h2><p>明明想在学校中请一些同学一起做一项问卷调查，为了实验的客观性，他先用计算机生成了N个1到1000之间的随机整数（N≤1000），对于其中重复的数字，只保留一个，把其余相同的数去掉，不同的数对应着不同的学生的学号。然后再把这些数从小到大排序，按照排好的顺序去找同学做调查。请你协助明明完成“去重”与“排序”的工作(同一个测试用例里可能会有多组数据(用于不同的调查)，希望大家能正确处理)</p><p>这是华为的一道面试题。在原文中已经明确点出了所需的一些函数，分别是排序和去重。C++有现成的排序函数<code>sort()</code>，以及去重函数<code>unique()</code>。其中<code>unique()</code>,<code>sort()</code>都是属于头文件<code>#include &lt;algorithm&gt;</code></p><p><code>auto end_un = unique(vec.begin(),vec.end());</code></p><p>这里的<code>unique()</code>返回的值是<font color="#dd0000">最后一个不重复数字的下标。</font></p><p>sort函数有三个参数：</p><ul><li><p>第一个是要排序的数组的起始地址</p></li><li><p>第二个是结束的地址（最后一位要排序的地址)</p></li><li><p>第三个参数是排序的方法，可以是升序也可是降序。如果不写第三个参数，则默认的排序方法是升序排列</p></li></ul><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//升序</span></span><br><span class="line">sort( a, b, less&lt;<span class="keyword">int</span>&gt;() );</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//降序</span></span><br><span class="line">sort( a, b, greater&lt;<span class="keyword">int</span>&gt;() );</span><br></pre></td></tr></table></figure><p>如果先<code>去重</code>再<code>排序</code>，那么<code>去重</code>就有可能不会发挥作用。因为<code>去重</code>再<code>排序</code>排序时会把重复的数字又放在了一起，所以要先<code>排序</code>再<code>去重</code>。</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  main.cpp</span></span><br><span class="line"><span class="comment">//  Demo</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  Created by Egan on 2021/3/9.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">     </span><br><span class="line">    <span class="keyword">int</span> n= <span class="number">0</span>,num = <span class="number">0</span>;</span><br><span class="line">     </span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">cin</span> &gt;&gt; n) &#123;</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; vec;</span><br><span class="line">         </span><br><span class="line">        <span class="comment">//input</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; num;</span><br><span class="line">            vec.push_back(num);</span><br><span class="line">        &#125;</span><br><span class="line">         </span><br><span class="line">        <span class="comment">//sort</span></span><br><span class="line">        sort(vec.begin(), vec.end());</span><br><span class="line">         </span><br><span class="line">        <span class="comment">//unique</span></span><br><span class="line">        <span class="keyword">auto</span> end_un = unique(vec.begin(),vec.end());</span><br><span class="line">        vec.erase(end_un, vec.end());</span><br><span class="line">         </span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> m = vec.begin(); m != vec.end(); m ++) &#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; *m &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 日常 </category>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日常 </tag>
            
            <tag> C++ </tag>
            
            <tag> vector </tag>
            
            <tag> sort </tag>
            
            <tag> unique </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>毕业半年的自己</title>
      <link href="2020/12/22/Six_months_after_graduation/"/>
      <url>2020/12/22/Six_months_after_graduation/</url>
      
        <content type="html"><![CDATA[<h2 id="半年之后"><a href="#半年之后" class="headerlink" title="半年之后"></a>半年之后</h2><p>&emsp;我们这届的毕业生，大学只上了三年半，最后半年的时光都是在家里渡过。拿毕业证学位证、拍毕业照以及收拾行李，加起来不过两天时间。一切都是匆匆忙忙，匆忙到连一顿散伙饭都没法进行。<br><br>&emsp;还差几日，自己也就毕业半年了，也算是有了半年的<del>工作经验</del>(划水经验)，学软件的我，毕业之后进了一家偏自动化的公司，工业4.0时代嘛，天天代码倒是不多，就是比较累。</p>]]></content>
      
      
      <categories>
          
          <category> 日常 </category>
          
          <category> 工作 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日常 </tag>
            
            <tag> 杂记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Test</title>
      <link href="2020/10/22/firstPage/"/>
      <url>2020/10/22/firstPage/</url>
      
        <content type="html"><![CDATA[<p><strong>测试文档</strong></p><pre><code>从这一篇测试文档开始，希望自己能够收起懒惰，重拾激情</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> Test </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
